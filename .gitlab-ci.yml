image: "registry.gitlab.com/eyeo/docker/libadblockplus-android_gitlab-runner:202004.1"
stages:
  - unit_test
  - build_dependencies
  - build
  - device_tests
  - publish

variables:
  GRADLE_OPTS: "-Xmx4096m" #set max heap size to 4gb

# This updates the cache with shared dependencies
build_dependencies:
  stage: build_dependencies
  cache:
    key: $CI_COMMIT_REF_NAME
    policy: push
    paths:
      - libadblockplus/
      - buildtools/
  variables:
    WGET_FLAGS: "-q"
  script:
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=x64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=x64 Configuration=release
    - cd ..

# This is a shared read-only cache definition
# which jobs can explicitly include to have build deps
.cache_readonly: &cache_readonly
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - libadblockplus/
      - buildtools/
    policy: pull

gradle_unit_tests:
  stage: unit_test
  script:
    - ./gradlew test
  artifacts:
    reports:
      junit: adblock-android/build/test-results/*/TEST-*.xml

build_libadblockplus-android:all:
  <<: *cache_readonly
  stage: build
  script:
    - ./gradlew clean assemble assembleAndroidTest
  artifacts:
    paths:
      - adblock-android-webviewapp/build/outputs/apk/release/adblock-android-webviewapp-release-unsigned.apk
      - adblock-android-webviewapp/build/outputs/apk/debug/adblock-android-webviewapp-debug.apk
      # The test APKs are used later in the device testing
      - adblock-android/build/outputs/apk/androidTest/abi_all/debug/adblock-android-abi_all-debug-androidTest.apk
      - adblock-android-webview/build/outputs/apk/androidTest/debug/adblock-android-webview-debug-androidTest.apk
      - adblock-android-webviewapp/build/outputs/apk/androidTest/debug/adblock-android-webviewapp-debug-androidTest.apk
      - adblock-android-settings/build/outputs/apk/androidTest/debug/adblock-android-settings-debug-androidTest.apk

# The remaining build_* jobs are only built on rc branches
# They are run only to test that the build works, we dont use the artefacts
.onlyrcbuilds: &onlyrc
  only:
    - /^.*-rc[0-9]+$/

build_libadblockplus-android:arm:
  stage: build
  <<: *cache_readonly
  <<: *onlyrc
  script:
    - ./gradlew clean assembleAbi_arm

build_libadblockplus-android:arm64:
  stage: build
  <<: *cache_readonly
  <<: *onlyrc
  script:
    - ./gradlew clean assembleAbi_arm64

build_libadblockplus-android:x86:
  stage: build
  <<: *cache_readonly
  <<: *onlyrc
  script:
    - ./gradlew clean assembleAbi_x86

build_libadblockplus-android:custom-jni:
  stage: build
  <<: *cache_readonly
  <<: *onlyrc
  script:
    - LIBABP_SHARED_LIBRARY_NAME=adblockplus ./gradlew clean assembleAbi_arm

build_libadblockplus-android:without-jni:
  stage: build
  # Custom cache definition for this job
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      # Don't get dependencies because current dependencies are merely libadblockplus but we don't need it.
      # If the parameter is working correctly then the building should succeed without libadblockplus.
      - buildtools/
    policy: pull
  <<: *onlyrc
  script:
    - SKIP_JNI_COMPILATION=true ./gradlew clean assemble

testobject_tests:
  stage: device_tests
  script:
    - test -z ${TESTOBJ_PROJECT_KEY} && echo "echo TESTOBJ_PROJECT_KEY not set. Unable to run tests." && exit 1
    - test -f /opt/ci/runner.jar || wget https://s3.amazonaws.com/saucelabs-runner/v1.8/runner.jar -O /opt/ci/runner.jar
    # Docs for running tests on testobject:
    # https://wiki.saucelabs.com/display/DOCS/Command+Reference+for+Sauce+Runner+for+Real+Devices
    # Note - we start all tests concurrently and `wait` for them to finish. Non-zero exit codes are preserved.
    - |
      pids=""
      for APK in $(find . -name "*androidTest.apk")
        do echo "Testing $APK"
        java -jar /opt/ci/runner.jar espresso \
          --test $APK \
          --app ./adblock-android-webviewapp/build/outputs/apk/debug/adblock-android-webviewapp-debug.apk \
          --testname ${CI_JOB_URL} \
          --e notAnnotation androidx.test.filters.LargeTest \
          --apikey ${TESTOBJ_PROJECT_KEY} --datacenter EU &
        pids="$pids $!"
      done
      wait $pids
  artifacts:
    reports:
      junit: philll-adblockwebview-app-*.xml

memory_benchmark:
  stage: device_tests
  image: ubuntu:18.04
  before_script:
    - apt-get update
    - apt-get -qy install adb
    # this is libadblockplus-android dedicated emulator instance on CI, more info at https://jira.eyeo.com/browse/DP-1322
    - adb connect 172.17.0.1:4444
  script:
    - chmod +r ./adblock-android-webview/build/outputs/apk/androidTest/debug/adblock-android-webview-debug-androidTest.apk
    - chmod +x ./tools/run_benchmark.sh
    - ./tools/run_benchmark.sh

  artifacts:
      paths:
        - adblock-android-webview/build/outputs/memory_benchmark/
      reports:
        metrics: metrics.txt

.publish_template: &publish_template
  stage: publish
  <<: *cache_readonly
  script:
    - |
      if [[ ${DRY_RUN:-true} == "true" ]] ; then
        echo 'Note: $DRY_RUN is currently "true", run pipeline manually and set to "false" to actually publish to bintray'
      fi
    - ./gradlew bintrayUpload -PbintrayUser=${BINTRAY_USERNAME:-unset} -PbintrayKey=${BINTRAY_KEY:-unset} -PdryRun=${DRY_RUN:-true}

publish_rc_to_bintray:
  <<: *publish_template
  only:
    variables:
      - $RC
  before_script:
    - echo "Publishing release candidate ${RC}"
    # Append '-rcX' to the version to publish
    - sed -i -e "/moduleVersion/s/'$/-rc${RC}'/g" build.gradle

publish_to_bintray:
  <<: *publish_template
  stage: publish
  only:
    - tags
